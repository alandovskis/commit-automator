#!/usr/bin/env bash
set -euo pipefail
ROOT="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)"

. "${ROOT}/inc-sh/commit-automator.inc.sh"

usage() {
	echo "Usage: commit-automator install|prepare|register"
	exit 22
}

install() {
	if [ "$#" -lt 1 ]; then
		usage
	fi

	DIR=${1}
	shift
	HOOKS="${DIR}/.git/hooks"
	mkdir -p "${HOOKS}"
	cp "${ROOT}/hooks/prepare-commit-msg" "${HOOKS}/."
	echo -n "$(realpath $0) prepare " >>"${HOOKS}/prepare-commit-msg"
	echo '${COMMIT_MSG_FILE} ${BRANCH}' >>"${HOOKS}/prepare-commit-msg"
}

prepare() {
	if [ "$#" -lt 1 ]; then
		usage
	fi

	local commit_file="${1}"
	shift

	local branch=$(git rev-parse --abbrev-ref HEAD)
	local branch_file="${CONFIG_BRANCHES}/${branch}"

	if [ -f "${branch_file}" ]; then
		local issue=$(cat "${branch_file}")
		echo "" >> "${commit_file}"
		git interpret-trailers --in-place --trailer "Issue: ${issue}" "${commit_file}"
	fi
}

register() {
	if [ "$#" -lt 1 ]; then
		usage
	fi

	local branch=$(git rev-parse --abbrev-ref HEAD)

	local issue=${1}
	shift

	local dir
	local prefix=$(dirname "${branch}")
	local suffix=$(basename "${branch}")
	if [ "${prefix}" != "" ]; then
		dir="${CONFIG_BRANCHES}/${prefix}"
	else
		dir="${CONFIG_BRANCHES}"
	fi

	mkdir -p "${dir}"

	local branch_file
	branch_file="${dir}/${suffix}"
	echo "${issue}" >${branch_file}
}

if [ "$#" -lt 1 ]; then
	usage
fi

ACTION=${1}
shift

case $ACTION in
install)
	install "$@"
	;;
prepare)
	prepare "$@"
	;;
register)
	register "$@"
	;;
*)
	usage
	;;
esac
